name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: lefisius/dockerbuild

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Create New Branch with Commit Hash
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config user.name Lefisius
          git config user.email lephiafuri@gmail.com
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          NEW_BRANCH_NAME="log-$(echo "$COMMIT_MESSAGE" | tr '[:upper:]' '[:lower:]' | tr '[:space:]' '-' | tr '[:punct:]' '-')"
          git checkout -b $NEW_BRANCH_NAME
          git push https://x-access-token:${GH_PAT}@github.com/${{ github.repository }}.git $NEW_BRANCH_NAME

  zap_scan:
    runs-on: ubuntu-latest
    need: push_to_registry
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Start Application
        run: |
          npm install --legacy-peer-deps
          npm run start &
          sleep 60

      - name: Create output directory
        run: |
          mkdir -p output
          chmod 777 output

      - name: Run ZAP daemon mode
        run: |
          docker run --rm -d -v ${{ github.workspace }}/output:/output -p 8081:8081 lefisius/dockerbuild:main /zap/ZAP_WEEKLY_D-2024-09-17/zap.sh -daemon -config api.key=${{ secrets.ZAP_API_KEY }} -port 8081
          sleep 30

      - name: Run ZAP Spider via API
        run: |
          curl "http://localhost:8081/JSON/spider/action/scan/?apikey=${{ secrets.ZAP_API_KEY }}&url=http://localhost:4200"
          sleep 60  # Wait for spider to finish

      - name: Run ZAP Active Scan via API
        run: |
          curl "http://localhost:8081/JSON/ascan/action/scan/?apikey=${{ secrets.ZAP_API_KEY }}&url=http://localhost:4200"
          sleep 120  # Wait for active scan to finish

      - name: Save ZAP report
        run: |
          curl "http://localhost:8081/OTHER/core/other/htmlreport/?apikey=${{ secrets.ZAP_API_KEY }}" -o output/zap_report.html

      - name: Check output directory
        run: ls -l output

      - name: Upload ZAP report as artifact
        uses: actions/upload-artifact@v3
        with:
          name: zap-report
          path: ./output/zap_report.html
